#Working directories------------------------------------------------------------
# wd_data <- paste('W:/RICHCWA/WinModel/EFDC/RVAJR_Components/', scenario_name, sep = '')
wd_lookup <- c('W:/RICHCWA/WinModel/EFDC/R_Scripts')
#Load lookup tables-------------------------------------------------------------
setwd(wd_lookup)
lookup_station <- read.csv(file = 'WQ_Station_Lookup.csv', stringsAsFactors = F)
names(lookup_station) <-normVarNames(names(lookup_station))
lookup_station$station_no <- lookup_station$station_id
#Filter lookup station data for calibration stations----------------------------
stations_of_int <- c(753, 840, 641, 576, 574, 572)
calibration_stations <- lookup_station %>% filter(station_id %in% stations_of_int)
#Read WQ data and reformat things-----------------------------------------------
setwd(wd_lookup)
dat_wq <- read.csv(file = 'WQ_Data_from_DB.csv')
names(dat_wq) <- normVarNames(names(dat_wq))
dat_wq <- dat_wq %>% filter(station_no %in% stations_of_int)
#Adding in the station names and the EFDC grid IDs
dat_wq <- left_join(dat_wq, lookup_station)
#Reformat datetime and select a few fields
dat_wq$date_time <- mdy_hm(dat_wq$date_time)
dat_wq <- dat_wq %>% select(date_time, station_no, result, nd_qualifier, grid_id
, station_id, station = name)
#Add a few additional fields for use with other datasets
dat_wq$year <- year(dat_wq$date_time)
dat_wq <- dat_wq %>% filter(year > 2010 & year < 2014)
dat_wq$nd_qualifier <- fct_recode(dat_wq$nd_qualifier
, 'Detect' = 'D', 'Non-Detect' = 'ND')
#Libraries----------------------------------
library(excel.link); library(plyr); library(dplyr); library(ggplot2); library(tidyr); library(lubridate); library(stringr)
library(rattle); library(scales); library(forcats); library(gridExtra)
#Required Parameters------------------------
scenario_name <- c('RVAJR02_079')
# component_scenario_name <- c('RVAJR_C01')
#Working directories------------------------
wd_script_src <- ('W:/RICHCWA/WinModel/EFDC/R_Scripts/EFDC_Results_Figures/Component_Analysis')
wd_efdc_data_src <- paste('W:/RICHCWA/WinModel/EFDC/RICHCWA_Grid02/', scenario_name, sep = '')
# wd_component_data_src <- paste('W:/RICHCWA/WinModel/EFDC/RVAJR_Components/', component_scenario_name, sep = '')
#Parameters used in 00_Read_Component_Data_xlsb_Format.R
# file_name_component <- c('EFDC_Template_Development_Data.xlsb')
# rds_name_component <- paste(component_scenario_name, '_component_test_data.rds', sep = '')
# sheet_names <- c('WWTP', 'Unknown', 'Stormwater', 'CSOs', 'Upstream')
# df_names <- c('WWTP', 'Unknown', 'Stormwater', 'CSOs', 'Upstream')
#Parameters used in 00_Read_EFDC_Data_xlsb_Format.R
file_name_efdc <- c('EFDC_export_011917-1631.xlsb')
rds_name_efdc <- paste(scenario_name, '.rds', sep = '')
#Parameters used in Downstream_Boundary_STV.R
##None
#Check if a faster loading RDS file exists, if not then load from xlsb format
setwd(wd_efdc_data_src)
if(file.exists(rds_name_efdc)){
dat_efdc <- readRDS(file = rds_name_efdc)
}else{
setwd(wd_script_src)
source('01_Read_EFDC_Data_xlsb_Format.R')
}
#Load WQ Data
#Check if a faster loading RDS file exists, if not then load from xlsb format
setwd(wd_component_data_src)
setwd(wd_script_src)
source('01_Read_Water_Quality_csv_Format.R')
wd_script_src <- ('W:/RICHCWA/WinModel/EFDC/R_Scripts/EFDC_Results_Figures/Multi_Station_Timeseries')
#Libraries----------------------------------
library(excel.link); library(plyr); library(dplyr); library(ggplot2); library(tidyr); library(lubridate); library(stringr)
library(rattle); library(scales); library(forcats); library(gridExtra)
#Required Parameters------------------------
scenario_name <- c('RVAJR02_079')
# component_scenario_name <- c('RVAJR_C01')
#Working directories------------------------
wd_script_src <- ('W:/RICHCWA/WinModel/EFDC/R_Scripts/EFDC_Results_Figures/Multi_Station_Timeseries')
wd_efdc_data_src <- paste('W:/RICHCWA/WinModel/EFDC/RICHCWA_Grid02/', scenario_name, sep = '')
# wd_component_data_src <- paste('W:/RICHCWA/WinModel/EFDC/RVAJR_Components/', component_scenario_name, sep = '')
#Parameters used in 00_Read_Component_Data_xlsb_Format.R
# file_name_component <- c('EFDC_Template_Development_Data.xlsb')
# rds_name_component <- paste(component_scenario_name, '_component_test_data.rds', sep = '')
# sheet_names <- c('WWTP', 'Unknown', 'Stormwater', 'CSOs', 'Upstream')
# df_names <- c('WWTP', 'Unknown', 'Stormwater', 'CSOs', 'Upstream')
#Parameters used in 00_Read_EFDC_Data_xlsb_Format.R
file_name_efdc <- c('EFDC_export_011917-1631.xlsb')
rds_name_efdc <- paste(scenario_name, '.rds', sep = '')
#Parameters used in Downstream_Boundary_STV.R
##None
#Run---------------------------------------
#Load results from normal EFDC run that go with the component data
#Check if a faster loading RDS file exists, if not then load from xlsb format
setwd(wd_efdc_data_src)
if(file.exists(rds_name_efdc)){
dat_efdc <- readRDS(file = rds_name_efdc)
}else{
setwd(wd_script_src)
source('01_Read_EFDC_Data_xlsb_Format.R')
}
#Load WQ Data
#Check if a faster loading RDS file exists, if not then load from xlsb format
# setwd(wd_component_data_src)
setwd(wd_script_src)
source('01_Read_Water_Quality_csv_Format.R')
#Create Figures
setwd(wd_script_src)
source('02_Time_Series_with_Data.R')
unique(dat_wq$station)
dat <- dat %>% filter(station %in% unique(dat_wq$station))
#Libraries----------------------------------
library(excel.link); library(plyr); library(dplyr); library(ggplot2); library(tidyr); library(lubridate); library(stringr)
library(rattle); library(scales); library(forcats); library(gridExtra)
#Required Parameters------------------------
scenario_name <- c('RVAJR02_079')
# component_scenario_name <- c('RVAJR_C01')
#Working directories------------------------
wd_script_src <- ('W:/RICHCWA/WinModel/EFDC/R_Scripts/EFDC_Results_Figures/Multi_Station_Timeseries')
wd_efdc_data_src <- paste('W:/RICHCWA/WinModel/EFDC/RICHCWA_Grid02/', scenario_name, sep = '')
# wd_component_data_src <- paste('W:/RICHCWA/WinModel/EFDC/RVAJR_Components/', component_scenario_name, sep = '')
#Parameters used in 00_Read_Component_Data_xlsb_Format.R
# file_name_component <- c('EFDC_Template_Development_Data.xlsb')
# rds_name_component <- paste(component_scenario_name, '_component_test_data.rds', sep = '')
# sheet_names <- c('WWTP', 'Unknown', 'Stormwater', 'CSOs', 'Upstream')
# df_names <- c('WWTP', 'Unknown', 'Stormwater', 'CSOs', 'Upstream')
#Parameters used in 00_Read_EFDC_Data_xlsb_Format.R
file_name_efdc <- c('EFDC_export_011917-1631.xlsb')
rds_name_efdc <- paste(scenario_name, '.rds', sep = '')
#Parameters used in Downstream_Boundary_STV.R
##None
#Run---------------------------------------
#Load results from normal EFDC run that go with the component data
#Check if a faster loading RDS file exists, if not then load from xlsb format
setwd(wd_efdc_data_src)
if(file.exists(rds_name_efdc)){
dat_efdc <- readRDS(file = rds_name_efdc)
}else{
setwd(wd_script_src)
source('01_Read_EFDC_Data_xlsb_Format.R')
}
#Load WQ Data
setwd(wd_script_src)
source('01_Read_Water_Quality_csv_Format.R')
#Create Figures
setwd(wd_script_src)
source('02_Time_Series_with_Data.R')
#Libraries----------------------------------
library(excel.link); library(plyr); library(dplyr); library(ggplot2); library(tidyr); library(lubridate); library(stringr)
library(rattle); library(scales); library(forcats); library(gridExtra)
#Required Parameters------------------------
scenario_name <- c('RVAJR02_079')
# component_scenario_name <- c('RVAJR_C01')
#Working directories------------------------
wd_script_src <- ('W:/RICHCWA/WinModel/EFDC/R_Scripts/EFDC_Results_Figures/Multi_Station_Timeseries')
wd_efdc_data_src <- paste('W:/RICHCWA/WinModel/EFDC/RICHCWA_Grid02/', scenario_name, sep = '')
# wd_component_data_src <- paste('W:/RICHCWA/WinModel/EFDC/RVAJR_Components/', component_scenario_name, sep = '')
#Parameters used in 00_Read_Component_Data_xlsb_Format.R
# file_name_component <- c('EFDC_Template_Development_Data.xlsb')
# rds_name_component <- paste(component_scenario_name, '_component_test_data.rds', sep = '')
# sheet_names <- c('WWTP', 'Unknown', 'Stormwater', 'CSOs', 'Upstream')
# df_names <- c('WWTP', 'Unknown', 'Stormwater', 'CSOs', 'Upstream')
#Parameters used in 00_Read_EFDC_Data_xlsb_Format.R
file_name_efdc <- c('EFDC_export_011917-1631.xlsb')
rds_name_efdc <- paste(scenario_name, '.rds', sep = '')
#Parameters used in Downstream_Boundary_STV.R
##None
#Run---------------------------------------
#Load results from normal EFDC run that go with the component data
#Check if a faster loading RDS file exists, if not then load from xlsb format
setwd(wd_efdc_data_src)
if(file.exists(rds_name_efdc)){
dat_efdc <- readRDS(file = rds_name_efdc)
}else{
setwd(wd_script_src)
source('01_Read_EFDC_Data_xlsb_Format.R')
}
#Load WQ Data
setwd(wd_script_src)
source('01_Read_Water_Quality_csv_Format.R')
#Create Figures
setwd(wd_script_src)
source('02_Time_Series_with_Data.R')
